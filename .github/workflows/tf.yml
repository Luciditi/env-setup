name: terraform-checks 

env:
  ENVSETUP_REPO_SSH: ${{ github.event.inputs.repo || 'git@github.com:Luciditi/env-setup.git' }}
  ENVSETUP_CONFIG: ${{ github.event.inputs.config || 'docker/default.config.yml' }}
  ENVSETUP_VERSION: ${{ github.event.inputs.version || '' }}

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
      contents: write
      pull-requests: write
      id-token: write

concurrency:
  group: pr-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  tf-changes:
    runs-on: ubuntu-latest
    steps:
        - name: Check TF Changes
          id: changed
          uses: tj-actions/changed-files@v45
          with:
            files: |
              terraform/**
    outputs:
      any_changed: ${{ steps.changed.outputs.any_changed }}

  tf-doc:
    runs-on: ubuntu-latest
    needs: tf-changes
    if: needs.tf-changes.outputs.any_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Render README.md
        uses: terraform-docs/gh-actions@v1.2.0
        with:
          working-dir: terraform
          output-file: README.md
          config-file: terraform/.terraform-docs.yml
          output-method: replace
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "`terraform-docs`: update docs"
          add: 'terraform/README.md'

  tf-fmt:
    runs-on: ubuntu-latest
    needs: tf-changes
    if: needs.tf-changes.outputs.any_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Terraform Format
        uses: dflook/terraform-fmt@v1
        with:
          path: terraform
      - name: Commit format changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: Format `*.tf` to canonical format via `tf fmt`.
          add: 'terraform/*.tf'

  tf-plan:
    runs-on: ubuntu-latest
    needs: tf-changes
    if: needs.tf-changes.outputs.any_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Terraform CLI
        uses: hashicorp/setup-terraform@v3
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform
      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform

  tf-sec:
    runs-on: ubuntu-latest
    needs: tf-changes
    if: needs.tf-changes.outputs.any_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Terraform Sec Scan
        uses: aquasecurity/tfsec-pr-commenter-action@v1.3.1
        with:
          working_directory: 'terraform'
          github_token: ${{ github.token }}
          soft_fail_commenter: true

  tf-validate:
    runs-on: ubuntu-latest
    needs: tf-changes
    if: needs.tf-changes.outputs.any_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Terraform Validate
        uses: dflook/terraform-validate@v1
        id: validate
        with:
          path: terraform
      - name: Validation Failed
        if: ${{ failure() && steps.validate.outputs.failure-reason == 'validate-failed' }}
        run: echo "terraform validate failed"
