name: deploy-image

env:
  ENVSETUP_REPO_SSH: ${{ github.event.inputs.repo || 'git@github.com:Luciditi/env-setup.git' }}
  ENVSETUP_DOTFILES_REPO_SSH: ${{ github.event.inputs.dotfiles_repo || 'git@github.com:Luciditi/env-setup-dotfiles.git' }}
  ENVSETUP_DOTFILES_PRV_REPO_SSH: ${{ github.event.inputs.dotfiles_prv_repo || 'git@github.com:Luciditi/env-setup-dotfiles.git' }}
  ENVSETUP_CONFIG: ${{ github.event.inputs.config || 'docker/default.config.yml' }}
  ENVSETUP_VERSION: ${{ github.event.inputs.version || '' }}

on:
  push:
    tags:
      - 'v[0-9].[0-9].[0-9]'
  workflow_dispatch:
    inputs:
      config:
        type: choice
        description: "The configuration manifest used for running env-setup."
        options: 
          - 'docker/default.config.yml'
          - 'docker/.mini.config.yml'
          - 'docker/.most.config.yml'
          - 'docker/.none.config.yml'
        required: true
        default: 'docker/default.config.yml'
      version:
        description: "The env-setup version tag."
        required: true
        default: ''
      repo:
        description: "The default repo of `env-setup`."
        required: true
        default: 'git@github.com:Luciditi/env-setup.git'
      dotfiles_repo:
        description: "The default repo of public dotfiles."
        required: true
        default: 'git@github.com:Luciditi/env-setup-dotfiles.git'
      dotfiles_prv_repo:
        description: "The default repo of private dotfiles."
        required: true
        default: 'git@github.com:Luciditi/env-setup-dotfiles.git'
      latest:
        type: boolean
        description: "Tag as latest."
        default: false

jobs:
  build-on-tag:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dispatch ${{ github.ref_name }} Builds
        run: |
          gh workflow run "deploy-image.yml" -f config="docker/.none.config.yml" -f version="${TAG:1}" latest=false --ref "$(git symbolic-ref --short -q HEAD)"
          gh workflow run "deploy-image.yml" -f config="docker/.mini.config.yml" -f version="${TAG:1}" latest=false --ref "$(git symbolic-ref --short -q HEAD)"
          gh workflow run "deploy-image.yml" -f config="docker/default.config.yml" -f version="${TAG:1}" latest=true --ref "$(git symbolic-ref --short -q HEAD)"
          gh workflow run "deploy-image.yml" -f config="docker/.most.config.yml" -f version="${TAG:1}" latest=false --ref "$(git symbolic-ref --short -q HEAD)"
        env:
          TAG: ${{ github.ref_name }}
          GH_TOKEN: ${{ github.token }}

  build-and-deploy-image:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup SSH key
        run: |
          echo "$ENVSETUP_SSH_KEY" > ./.ssh_key_id_rsa
        env:
          ENVSETUP_SSH_KEY: ${{ secrets.ENVSETUP_SSH_KEY }}

      - name: Get image tags
        run: |
          case "${{ env.ENVSETUP_CONFIG }}" in
            "docker/default.config.yml") CONFIG_TAG="default";;
            "docker/.mini.config.yml") CONFIG_TAG="mini" ;;
            "docker/.most.config.yml") CONFIG_TAG="most" ;;
            "docker/.none.config.yml") CONFIG_TAG="none" ;;
            *) CONFIG_TAG="null" ;;
          esac
          REPO="ghcr.io/${{ github.repository }}"

          echo "config_tag=$CONFIG_TAG" >> $GITHUB_OUTPUT
          echo "repo=${REPO,,}" >> $GITHUB_OUTPUT
          echo "repo_date=$(date --rfc-3339=date)" >> $GITHUB_OUTPUT
          echo "repo_revision=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "tag=${{ env.ENVSETUP_VERSION }}-$CONFIG_TAG" >> $GITHUB_OUTPUT
        id: get-tags

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.get-tags.outputs.repo }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.ENVSETUP_VERSION }},enable=${{ github.event.inputs.config == 'docker/default.config.yml' }}
            type=raw,value=${{ steps.get-tags.outputs.tag }}
            type=raw,value=${{ steps.get-tags.outputs.config_tag }}
            type=raw,value=latest,enable=${{ github.event.inputs.latest }}

      - name: Get Image Tags
        run: |
          echo $TAGS
        env:
          TAGS: ${{ steps.meta.outputs.tags }}

          #- name: Build and push
          #  uses: docker/build-push-action@v6
          #  with:
          #    build-args: |
          #      ENVSETUP_REPO_SSH=${{ env.ENVSETUP_REPO_SSH }}
          #      ENVSETUP_DOTFILES_REPO_SSH=${{ env.ENVSETUP_DOTFILES_REPO_SSH }}
          #      ENVSETUP_DOTFILES_PRV_REPO_SSH=${{ env.ENVSETUP_DOTFILES_PRV_REPO_SSH }}
          #      ENVSETUP_CONFIG=${{ env.ENVSETUP_CONFIG }}
          #      ENVSETUP_VERSION=${{ env.ENVSETUP_VERSION }}
          #    cache-from: type=gha
          #    cache-to: type=gha,mode=max
          #    file: docker/Dockerfile
          #    labels: |
          #      org.opencontainers.image.created=${{ steps.get-tags.outputs.repo_date }}
          #      org.opencontainers.image.ref.name=${{ github.repository }}-${{ steps.get-tags.outputs.tag }}
          #      org.opencontainers.image.revision=${{ steps.get-tags.outputs.repo_revision }}
          #      org.opencontainers.image.version=${{ env.ENVSETUP_VERSION }}
          #    platforms: linux/amd64
          #    push: true
          #    secret-files: |
          #      ssh=./.ssh_key_id_rsa
          #    tags: ${{ steps.meta.outputs.tags }}

      #- name: Setup tmate session
        #uses: mxschmitt/action-tmate@v3
