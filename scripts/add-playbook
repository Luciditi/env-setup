#!/usr/bin/env bash

# Set stop on error / enable debug
set -euo pipefail

############################################################################
# CREATE PLAYBOOK
############################################################################

##{{{#######################################################################
############################################################################
# FUNCTIONS
############################################################################

##}}}#######################################################################


#/ Usage: $SCRIPT PLAYBOOK_NAME
#/
#/
#/   <PLAYBOOK_NAME>: Name of new playbook
#/
#/ Examples:
#/
#/   $SCRIPT 04-new-playbook
#/      Create a new playbook called 04-new-playbook
#/
#/ Options:
#/   --help/-h: Display this help message
SCRIPT=$(basename "$0")
SCRIPTS_DIR="$(dirname "$0")"
# shellcheck source=/dev/null
source "$SCRIPTS_DIR/_common"
usage() {
    grep '^#/' "$0" | cut -c4- | sed -e "s/\$SCRIPT/$SCRIPT/g" ; exit 0 ;
}
expr "$*" : ".*--help" > /dev/null && usage

# Handle options
# Add options x: - required arg
while getopts 'huv' FLAG; do
    case "${FLAG}" in
        h) usage; exit 0 ;;
        *) : ;;
    esac
done

############################################################################
# VARS
############################################################################
PLAYBOOK_NAME=${1:-""}

############################################################################
# MAIN
############################################################################

case "$ENVSETUP_OS" in
    "darwin"* )
        ABSOLUTE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" \
            && pwd)/$(basename "${BASH_SOURCE[0]}")"
        PLAYBOOK_DIR="$(dirname "$(dirname "$ABSOLUTE_PATH")")/ansible"
        ;;
    "linux"* )
        if [[ $SUGGEST_ANSIBLE == "1" ]]; then
            "$SCRIPTS_DIR/linux/install-ansible"
        fi
        PLAYBOOK_DIR="$(dirname "$(realpath "$SCRIPTS_DIR")")/ansible"
        ;;
    * )
        echo -e "${C_WAR}Unsupported OS${C_RES}\n"
        exit 1
        ;;
esac

if [[ -z "$PLAYBOOK_NAME" ]]; then
    echo -e "${C_ERR}Enter a playbook name.${C_RES}\n"
    usage
    exit 1
else
    if [[ ! -d "$PLAYBOOK_DIR/linux/$PLAYBOOK_NAME/" ]]; then
        mkdir -p "$PLAYBOOK_DIR/linux/$PLAYBOOK_NAME/"
        cp "$PLAYBOOK_DIR/.main.yml" "$PLAYBOOK_DIR/linux/$PLAYBOOK_NAME/main.yml"
        ln -sf ../.00-init/ansible.cfg "$PLAYBOOK_DIR/linux/$PLAYBOOK_NAME/ansible.cfg"
        ln -sf ../.00-init/inventory "$PLAYBOOK_DIR/linux/$PLAYBOOK_NAME/inventory"
        ln -sf ../.00-init/requirements.yml "$PLAYBOOK_DIR/linux/$PLAYBOOK_NAME/requirements.yml"
    fi

    if [[ ! -d "$PLAYBOOK_DIR/macos/$PLAYBOOK_NAME/" ]]; then
        mkdir -p "$PLAYBOOK_DIR/macos/$PLAYBOOK_NAME/"
        cp "$PLAYBOOK_DIR/.main.yml" "$PLAYBOOK_DIR/macos/$PLAYBOOK_NAME/main.yml"
        ln -sf ../.00-init/ansible.cfg "$PLAYBOOK_DIR/macos/$PLAYBOOK_NAME/ansible.cfg"
        ln -sf ../.00-init/inventory "$PLAYBOOK_DIR/macos/$PLAYBOOK_NAME/inventory"
        ln -sf ../.00-init/requirements.yml "$PLAYBOOK_DIR/macos/$PLAYBOOK_NAME/requirements.yml"
    fi

    echo -e "${C_SUC}$PLAYBOOK_NAME playbook started.${C_RES}\n"
fi
